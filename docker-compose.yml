version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper  # Assure que le hostname est bien défini
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker  # Définit un hostname
    container_name: kafka-broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Utilise bien le hostname défini pour Zookeeper
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 1
      KAFKA_LOG_FLUSH_INTERVAL_MS: 1000
    depends_on:
      - zookeeper  # Assure que Kafka ne démarre que quand Zookeeper est prêt
    networks:
      - kafka-network

  producer:
    build: producer
    container_name: kafka-producer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - ENV_FILE=/producer/.env
    depends_on:
      - broker  # Attendre que Kafka soit prêt
    networks:
      - kafka-network

  consumer:
    build: consumer
    container_name: kafka-consumer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - ENV_FILE=/consumer/.env
    depends_on:
      - broker  # Attendre que Kafka soit prêt
    networks:
      - kafka-network

networks:
  kafka-network:
